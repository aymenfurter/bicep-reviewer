name: Bicep Analyzer CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
  AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
  AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
  AZURE_SEARCH_ENDPOINT: ${{ secrets.AZURE_SEARCH_ENDPOINT }}
  AZURE_SEARCH_ADMIN_KEY: ${{ secrets.AZURE_SEARCH_ADMIN_KEY }}
  AZURE_SEARCH_INDEX: ${{ secrets.AZURE_SEARCH_INDEX }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Create example files
        run: |
          # Create example.bicep
          cat > example.bicep << 'EOL'
          param skuName string = 'Standard_LRS'
          resource storageaccountName 'Microsoft.Storage/storageAccounts@2022-09-01' = {
            name: 'MyStorage${uniqueString(resourceGroup().id)}'
            location: resourceGroup().location
            sku: {
              name: skuName
            }
            kind: 'StorageV2'
          }
          output stgName string = storageaccountName.name
          EOL

          # Create bicep-best-practices.md
          cat > bicep-best-practices.md << 'EOL'
          # Bicep Best Practices
          
          ## Parameters
          - Use descriptive parameter names
          - Include parameter descriptions
          - Use appropriate parameter types
          
          ## Variables
          - Use meaningful variable names
          - Encapsulate complex logic in variables
          
          ## Naming
          - Use lowerCamelCase for symbolic names
          - Follow Azure naming conventions
          
          ## Resources
          - Use latest API versions
          - Implement proper tagging
          
          ## Outputs
          - Only expose necessary values
          - Use descriptive output names
          EOL

      - name: Build
        run: cargo build --release

      - name: Run Bicep Analyzer
        run: |
          ./target/release/bicep_llm_validator \
            --bicep-file example.bicep \
            --best-practices-file bicep-best-practices.md \
            --minimum-severity 3

      - name: Upload Analysis Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: analysis-results
          path: |
            example.bicep
            bicep-best-practices.md

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Run rustfmt
        run: cargo fmt -- --check || true

      - name: Run clippy
        run: cargo clippy || true

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
